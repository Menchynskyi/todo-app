{"version":3,"sources":["components/ItemsCounter/ItemsCounter.js","components/Header/Header.js","components/Message/Message.js","components/ItemList/ItemList.js","components/AddForm/AddForm.js","components/StatusFilter/StatusFilter.js","components/SearchPanel/SearchPanel.js","components/App/App.js","index.js"],"names":["ItemsCounter","doneCounter","todoCounter","importantCounter","items","todo","length","className","Header","Message","text","ItemList","props","onClickDone","onClickImportant","onClickDelete","allItems","visibleItems","map","label","id","styles","done","important","key","onClick","message","AddForm","onItemAdded","useState","customLabel","setCustomLabel","class","placeholder","validation","setValidation","onSubmit","e","preventDefault","type","onChange","target","value","onInput","StatusFilter","status","onFilterChange","buttons","name","statusStyle","SearchPanel","onSearch","searchValue","App","todos","setTodos","setId","setStatus","search","setSearch","useEffect","localStorage","getItem","JSON","parse","setItem","stringify","filter","createElement","labelName","toggleProperty","arr","propName","idx","findIndex","item","slice","el","toLowerCase","includes","searchFilter","newArr","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.69a234a2.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './ItemsCounter.scss';\r\n\r\nconst ItemsCounter = ({ doneCounter, todoCounter, importantCounter, items }) => {\r\n  let todo = '';\r\n\r\n  if (todoCounter > 0) {\r\n    todo = `To do: ${todoCounter}, done: ${doneCounter}`;\r\n  };\r\n  if (importantCounter > 0) {\r\n    todo = `To do: ${todoCounter}, important: ${importantCounter}, done: ${doneCounter}`\r\n  };\r\n  if (todoCounter === 0) {\r\n    todo = `All done: ${doneCounter}`\r\n  };\r\n  if (items.length === 0) {\r\n    todo = null\r\n  };\r\n\r\n  return (\r\n    <span className=\"items-counter\">\r\n      {todo}\r\n    </span>\r\n  );\r\n};\r\n\r\nItemsCounter.propTypes = {\r\n  doneCounter: PropTypes.number,\r\n  todoCounter: PropTypes.number,\r\n  importantCounter: PropTypes.number,\r\n  items: PropTypes.arrayOf(PropTypes.object)\r\n};\r\n\r\nexport default ItemsCounter;","import React from 'react';\r\nimport ItemsCounter from '../ItemsCounter/ItemsCounter';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './Header.scss';\r\n\r\nconst Header = ({ doneCounter, todoCounter, importantCounter, items }) => {\r\n  return (\r\n    <div className=\"header\">\r\n      <span className=\"logo\">\r\n        Todo App\r\n      </span>\r\n      <ItemsCounter\r\n        doneCounter={doneCounter}\r\n        todoCounter={todoCounter}\r\n        importantCounter={importantCounter}\r\n        items={items}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  doneCounter: PropTypes.number,\r\n  todoCounter: PropTypes.number,\r\n  importantCounter: PropTypes.number,\r\n  items: PropTypes.arrayOf(PropTypes.object)\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './Message.scss';\r\n\r\nconst Message = ({ text }) => {\r\n  return (\r\n    <span className=\"message\">\r\n      <i className=\"fa fa-pencil-square\" />\r\n      {text}\r\n    </span>\r\n  );\r\n};\r\n\r\nMessage.propTypes = {\r\n  text: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Message;","import React from 'react';\r\nimport Message from '../Message/Message';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './ItemList.scss';\r\n\r\nconst ItemList = (props) => {\r\n  const { onClickDone, onClickImportant, onClickDelete, allItems, visibleItems } = props;\r\n\r\n  const renderElements = (arr) => {\r\n    return arr.map(({ label, id, done, important }) => {\r\n      let styles = '';\r\n      if (done) styles += ' done-item';\r\n      if (important) styles += ' important-item';\r\n      return (\r\n        <li key={id}>\r\n          <span className={styles}>{label}</span>\r\n          <div className=\"buttons-group\">\r\n            <i\r\n              className=\"fa fa-check-square done\"\r\n              onClick={() => onClickDone(id)}\r\n            />\r\n            <i\r\n              className=\"fa fa-exclamation-circle important\"\r\n              onClick={() => onClickImportant(id)}\r\n            />\r\n            <i\r\n              className=\"fa fa-trash delete\"\r\n              onClick={() => onClickDelete(id, allItems)}\r\n            />\r\n          </div>\r\n        </li>\r\n      );\r\n    });\r\n  };\r\n\r\n  const items = renderElements(visibleItems);\r\n\r\n  let message = visibleItems.length === 0 ?\r\n    <Message text=\"It's time to add a new todo!\" /> :\r\n    null;\r\n\r\n  if (visibleItems.length === 0 && allItems.length > 0) {\r\n    message = <Message text=\"No such todos\" />\r\n  };\r\n\r\n  return (\r\n    <div className=\"item-list\">\r\n      <ul>\r\n        {message}\r\n        {items}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nItemList.propTypes = {\r\n  onClickDone: PropTypes.func,\r\n  onClickImportant: PropTypes.func,\r\n  onClickDelete: PropTypes.func,\r\n  allItems: PropTypes.arrayOf(PropTypes.object),\r\n  visibleItems: PropTypes.arrayOf(PropTypes.object)\r\n};\r\n\r\nexport default ItemList;","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './AddForm.scss';\r\n\r\nconst AddForm = ({ onItemAdded }) => {\r\n  const [customLabel, setCustomLabel] = useState('');\r\n  const [validation, setValidation] = useState({\r\n    class: '',\r\n    placeholder: 'What needs to be done'\r\n  });\r\n\r\n  const onInput = (e) => {\r\n    setCustomLabel(e.target.value);\r\n  };\r\n\r\n  const onLabelSubmit = (e) => {\r\n    e.preventDefault();\r\n    setValidation({\r\n      class: '',\r\n      placeholder: 'What needs to be done'\r\n    });\r\n\r\n    if (customLabel.length === 0) {\r\n      setValidation({\r\n        class: 'not-validated',\r\n        placeholder: 'Field is empty, please enter your todo'\r\n      });\r\n      setCustomLabel('');\r\n    } else if (customLabel.length > 25) {\r\n      setValidation({\r\n        class: 'not-validated',\r\n        placeholder: ''\r\n      });\r\n    } else {\r\n      onItemAdded(customLabel);\r\n      setCustomLabel('');\r\n    };\r\n  };\r\n\r\n  return (\r\n    <form\r\n      className=\"add-form\"\r\n      onSubmit={onLabelSubmit}\r\n    >\r\n      <input\r\n        className={validation.class}\r\n        type=\"text\"\r\n        placeholder={validation.placeholder}\r\n        onChange={(e) => onInput(e)}\r\n        value={customLabel}\r\n      />\r\n\r\n      <button\r\n        type=\"submit\"\r\n        className=\"add-button\"\r\n      >\r\n        Add\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nAddForm.propTypes = {\r\n  onItemAdded: PropTypes.func\r\n};\r\n\r\nexport default AddForm;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './StatusFilter.scss';\r\n\r\nconst StatusFilter = ({ status, onFilterChange }) => {\r\n  const buttonsNames = [\r\n    { name: 'All' },\r\n    { name: 'Current' },\r\n    { name: 'Done' }\r\n  ];\r\n\r\n  const renderButtons = (arr) => {\r\n    return arr.map(({ name }) => {\r\n      const isActive = status === name;\r\n      const statusStyle = isActive ? 'current' : '';\r\n\r\n      return (\r\n        <button className={statusStyle}\r\n          key={name}\r\n          onClick={() => onFilterChange(name)}\r\n        >\r\n          {name}\r\n        </button>\r\n      );\r\n    });\r\n  };\r\n\r\n  const buttons = renderButtons(buttonsNames);\r\n\r\n  return (\r\n    <div className=\"status-filter\">\r\n      {buttons}\r\n    </div>\r\n  );\r\n};\r\n\r\nStatusFilter.propTypes = {\r\n  status: PropTypes.string,\r\n  onFilterChange: PropTypes.func.isRequired\r\n};\r\n\r\nexport default StatusFilter;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './SearchPanel.scss';\r\n\r\nconst SearchPanel = ({ onSearch, searchValue }) => {\r\n  return (\r\n    <form className=\"search-panel\">\r\n      <input\r\n        type=\"text\"\r\n        name=\"todos\"\r\n        placeholder=\"Search your todos...\"\r\n        onChange={(e) => onSearch(e)}\r\n        value={searchValue}\r\n      >\r\n      </input>\r\n    </form>\r\n  );\r\n};\r\n\r\nSearchPanel.propTypes = {\r\n  onSearch: PropTypes.func,\r\n  searchValue: PropTypes.string\r\n};\r\n\r\nexport default SearchPanel;","import React, { useState, useEffect } from 'react';\r\nimport Header from '../Header/Header';\r\nimport ItemList from '../ItemList/ItemList';\r\nimport AddForm from '../AddForm/AddForm';\r\nimport StatusFilter from '../StatusFilter/StatusFilter';\r\nimport SearchPanel from '../SearchPanel/SearchPanel';\r\n\r\nimport './App.scss';\r\n\r\nconst App = () => {\r\n  const [todos, setTodos] = useState([]);\r\n  const [id, setId] = useState(100);\r\n  const [status, setStatus] = useState('All');\r\n  const [search, setSearch] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (localStorage.getItem('todos') !== null || localStorage.getItem('id') !== null) {\r\n      setTodos(JSON.parse(localStorage.getItem('todos')));\r\n      setId(JSON.parse(localStorage.getItem('id')));\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('todos', JSON.stringify(todos));\r\n    localStorage.setItem('id', JSON.stringify(id));\r\n  }, [id, todos]);\r\n\r\n  const searchFilter = (arr, search) => {\r\n    return arr.filter(el => el.label.toLowerCase().includes(search.toLowerCase()));\r\n  };\r\n\r\n  const onSearch = (e) => {\r\n    setSearch(e.target.value);\r\n  };\r\n\r\n  const addElement = (label) => {\r\n    setTodos([...todos, createElement(label)]);\r\n  };\r\n\r\n  const createElement = (labelName = 'New Todo Item') => {\r\n    setId(id + 1);\r\n    return {\r\n      id,\r\n      label: labelName,\r\n      important: false,\r\n      done: false\r\n    };\r\n  };\r\n\r\n  const toggleProperty = (arr, id, propName) => {\r\n    const idx = arr.findIndex((item) => item.id === id);\r\n    const oldItem = arr[idx];\r\n    const value = !oldItem[propName];\r\n\r\n    const item = { ...arr[idx], [propName]: value };\r\n    return [\r\n      ...arr.slice(0, idx),\r\n      item,\r\n      ...arr.slice(idx + 1)\r\n    ];\r\n  };\r\n\r\n  const onDone = (id) => {\r\n    setTodos(toggleProperty(todos, id, 'done'));\r\n  };\r\n\r\n  const onImportant = (id) => {\r\n    setTodos(toggleProperty(todos, id, 'important'));\r\n  };\r\n\r\n  const deleteItem = (id, arr) => {\r\n    const idx = arr.findIndex((item) => item.id === id);\r\n    const newArr = [\r\n      ...arr.slice(0, idx),\r\n      ...arr.slice(idx + 1)\r\n    ];\r\n    setTodos(newArr);\r\n  };\r\n\r\n  const onFilterChange = (name) => {\r\n    setStatus(name);\r\n  };\r\n\r\n  const filterItems = (items, filter) => {\r\n    if (filter === 'All') {\r\n      return items;\r\n    } else if (filter === 'Current') {\r\n      return items.filter((item) => !item.done);\r\n    } else if (filter === 'Done') {\r\n      return items.filter((item) => item.done);\r\n    };\r\n  };\r\n\r\n  const visibleItems = searchFilter(filterItems(todos, status), search);\r\n  const doneCounter = todos.filter(el => el.done).length;\r\n  const todoCounter = todos.filter(el => !el.done).length;\r\n  const importantCounter = todos.filter(el => !el.done && el.important).length;\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <Header\r\n        doneCounter={doneCounter}\r\n        todoCounter={todoCounter}\r\n        importantCounter={importantCounter}\r\n        items={todos}\r\n      />\r\n      <div className=\"status-panel\">\r\n        <SearchPanel\r\n          onSearch={onSearch}\r\n          searchValue={search}\r\n        />\r\n        <StatusFilter\r\n          status={status}\r\n          onFilterChange={onFilterChange}\r\n        />\r\n      </div>\r\n      <ItemList\r\n        visibleItems={visibleItems}\r\n        allItems={todos}\r\n        onClickDone={onDone}\r\n        onClickImportant={onImportant}\r\n        onClickDelete={deleteItem}\r\n        status={status}\r\n      />\r\n      <div className=\"add-elements\">\r\n        <AddForm onItemAdded={addElement} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './components/App/App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}