{"version":3,"sources":["components/ItemsCounter/ItemsCounter.js","components/Header/Header.js","components/Message/Message.js","components/ItemList/ItemList.js","components/AddForm/AddForm.js","components/StatusFilter/StatusFilter.js","components/SearchPanel/SearchPanel.js","components/App/App.js","index.js"],"names":["ItemsCounter","doneCounter","todoCounter","importantCounter","items","todo","length","className","Header","Message","text","ItemList","onClickDone","onClickImportant","onClickDelete","allItems","visibleItems","map","label","id","styles","done","important","key","onClick","message","AddForm","onItemAdded","useState","customLabel","setCustomLabel","onSubmit","e","preventDefault","type","placeholder","onChange","target","value","onInput","StatusFilter","state","buttons","name","arr","statusStyle","props","status","onFilterChange","this","renderButtons","Component","SearchPanel","onSearch","searchValue","App","todos","setTodos","setId","setStatus","search","setSearch","useEffect","localStorage","getItem","JSON","parse","setItem","stringify","filter","createElement","labelName","toggleProperty","propName","idx","findIndex","item","slice","el","toLowerCase","includes","searchFilter","newArr","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.12ab9146.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './ItemsCounter.scss';\r\n\r\nconst ItemsCounter = ({ doneCounter, todoCounter, importantCounter, items }) => {\r\n    let todo = '';\r\n    if (todoCounter > 0) {\r\n        todo = `To do: ${todoCounter}, done: ${doneCounter}`;\r\n    }\r\n    if (importantCounter > 0) {\r\n        todo = `To do: ${todoCounter}, important: ${importantCounter}, done: ${doneCounter}`\r\n    }\r\n    if (todoCounter === 0) {\r\n        todo = `All done: ${doneCounter}`\r\n    }\r\n    if (items.length === 0) {\r\n        todo = null\r\n    }\r\n    \r\n    return (\r\n        <span className=\"items-counter\">\r\n            {todo}\r\n        </span>\r\n    )\r\n}\r\n\r\nexport default ItemsCounter;","import React from 'react';\r\nimport ItemsCounter from '../ItemsCounter/ItemsCounter';\r\nimport './Header.scss';\r\n\r\nconst Header = ({ doneCounter, todoCounter, importantCounter, items }) => {\r\n    return (\r\n        <div className=\"header\">\r\n            <span className=\"logo\">Todo App</span>\r\n            <ItemsCounter doneCounter={doneCounter}\r\n                          todoCounter={todoCounter}\r\n                          importantCounter={importantCounter}\r\n                          items={items}/>            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nimport './Message.scss';\r\n\r\nconst Message = ({ text }) => {\r\n    return (\r\n        <span className=\"message\">\r\n            <i className=\"fa fa-pencil-square\"/>\r\n            {text}\r\n        </span>\r\n    );\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport Message from '../Message/Message';\r\n\r\nimport './ItemList.scss';\r\n\r\n const ItemList = ({ onClickDone, onClickImportant, onClickDelete, allItems, visibleItems }) => {\r\n\r\n    const renderElements = (arr) => {\r\n        return arr.map(({ label, id, done, important }) => {\r\n            let styles = '';\r\n            if(done) styles += ' done-item';\r\n            if (important) styles += ' important-item';\r\n            return (\r\n                <li key={id}>\r\n                        <span className={styles}>{label}</span>\r\n                        <div className=\"buttons-group\">\r\n                            <i className=\"fa fa-check-square done\"\r\n                                onClick={() => onClickDone(id)} />\r\n                            <i className=\"fa fa-exclamation-circle important\"\r\n                                onClick={() => onClickImportant(id)}/>\r\n                            <i className=\"fa fa-trash delete\"\r\n                                onClick={() => onClickDelete(id, allItems)}/>\r\n                        </div>\r\n                </li>\r\n            )\r\n        })\r\n    }\r\n\r\n    const items = renderElements(visibleItems);\r\n\r\n    let message = visibleItems.length === 0 ? <Message \r\n                                                text=\"It's time to add a new todo!\"/>\r\n                                                : null;\r\n\r\n    if (visibleItems.length === 0 && allItems.length > 0) {\r\n        message = <Message text=\"No such todos\"/>\r\n    }\r\n    \r\n    return (\r\n        <div className=\"item-list\">\r\n            <ul>\r\n                {message}\r\n                {items}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ItemList;","import React, { useState } from 'react';\r\n\r\nimport './AddForm.scss';\r\n\r\nconst AddForm = ({ onItemAdded }) => {\r\n    const [customLabel, setCustomLabel] = useState('');\r\n\r\n    const onInput = (e) => {\r\n        setCustomLabel(e.target.value);\r\n    }\r\n\r\n    const onLabelSubmit = (e) => {\r\n        e.preventDefault();\r\n        setCustomLabel('');\r\n        onItemAdded(customLabel);\r\n    }\r\n\r\n    return (\r\n        <form className=\"add-form\"\r\n                onSubmit={onLabelSubmit}>\r\n            <input type=\"text\"\r\n                    placeholder=\"What needs to be done\" \r\n                    onChange={(e) => onInput(e)}\r\n                    value={customLabel}/>\r\n            \r\n        <button type=\"submit\"\r\n                className=\"add-button\">Add</button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default AddForm;","import React, {Component} from 'react';\r\n\r\nimport './StatusFilter.scss';\r\n\r\nexport default class StatusFilter extends Component {\r\n    state = {\r\n        buttons: [\r\n            {name: 'All'},\r\n            {name: 'Current'},\r\n            {name: 'Done'}\r\n        ]\r\n    }\r\n\r\n    renderButtons(arr) {\r\n\r\n        return arr.map(({ name }) => {\r\n            const isActive = this.props.status === name;\r\n            const statusStyle = isActive ? 'current' : '';\r\n\r\n            return (\r\n                <button className={statusStyle}\r\n                        key={name}\r\n                        onClick={() => this.props.onFilterChange(name)}>\r\n                    {name}\r\n                </button>\r\n            )\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const buttons = this.renderButtons(this.state.buttons);\r\n\r\n        return (\r\n            <div className=\"status-filter\">\r\n                {buttons}\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nimport './SearchPanel.scss';\r\n\r\nconst SearchPanel = ({ onSearch, searchValue }) => {\r\n        return (\r\n            <form className=\"search-panel\">\r\n                <input type=\"text\"\r\n                       name=\"todos\"\r\n                       placeholder=\"Search your todos...\"\r\n                       onChange={(e) => onSearch(e)}\r\n                       value={searchValue}\r\n                       >\r\n                </input>\r\n            </form>\r\n        )\r\n}\r\n\r\nexport default SearchPanel;","import React, { useState, useEffect } from 'react';\r\nimport Header from '../Header/Header';\r\nimport ItemList from '../ItemList/ItemList';\r\nimport AddForm from '../AddForm/AddForm';\r\nimport StatusFilter from '../StatusFilter/StatusFilter';\r\nimport './App.scss';\r\nimport SearchPanel from '../SearchPanel/SearchPanel';\r\n\r\nconst App = () => {\r\n\r\n    const [todos, setTodos] = useState([]);\r\n    const [id, setId] = useState(100);\r\n    const [status, setStatus] = useState('All');\r\n    const [search, setSearch] = useState('');\r\n    \r\n    useEffect(() => {\r\n        if (localStorage.getItem('todos') !== null || localStorage.getItem('id') !== null){\r\n            setTodos(JSON.parse(localStorage.getItem('todos')));\r\n            setId(JSON.parse(localStorage.getItem('id')));\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('todos', JSON.stringify(todos));\r\n        localStorage.setItem('id', JSON.stringify(id));\r\n    }, [id, todos]);\r\n\r\n    const searchFilter = (arr, search) => {\r\n        return arr.filter(el => el.label.toLowerCase().includes(search.toLowerCase()));\r\n    }\r\n\r\n    const onSearch = (e) => {\r\n        setSearch(e.target.value);\r\n    }\r\n\r\n    const addElement = (label) => {\r\n        if (!label || label.length > 35) return;\r\n        setTodos([...todos, createElement(label)])\r\n    }\r\n\r\n    const createElement = (labelName = 'New Todo Item') => {\r\n        setId(id + 1);\r\n        return {\r\n            id,\r\n            label: labelName,\r\n            important: false,\r\n            done: false\r\n        }\r\n    }\r\n    \r\n    const toggleProperty = (arr, id, propName) => {\r\n        const idx = arr.findIndex((item) => item.id === id);\r\n        const oldItem = arr[idx];\r\n        const value = !oldItem[propName];\r\n    \r\n        const item = { ...arr[idx], [propName]: value } ;\r\n        return [\r\n          ...arr.slice(0, idx),\r\n          item,\r\n          ...arr.slice(idx + 1)\r\n        ];\r\n    };\r\n\r\n    const onDone = (id) => {\r\n        setTodos(toggleProperty(todos, id, 'done'));\r\n    }\r\n\r\n    const onImportant = (id) => {\r\n        setTodos(toggleProperty(todos, id, 'important'));\r\n    }\r\n\r\n    const deleteItem = (id, arr) => {\r\n        const idx = arr.findIndex((item) => item.id === id);\r\n        const newArr = [\r\n            ...arr.slice(0, idx),\r\n            ...arr.slice(idx + 1)\r\n        ];\r\n        setTodos(newArr);\r\n    }\r\n\r\n    const onFilterChange = (name) => {\r\n        setStatus(name);\r\n    }\r\n    \r\n    const filterItems = (items, filter) => {\r\n        if (filter === 'All') {\r\n            return items;\r\n        } else if (filter === 'Current') {\r\n            return items.filter((item) => !item.done);\r\n        } else if (filter === 'Done') {\r\n            return items.filter((item) => item.done);\r\n        }\r\n    }\r\n\r\n    const visibleItems = searchFilter(filterItems(todos, status), search);\r\n    const doneCounter = todos.filter(el => el.done).length;\r\n    const todoCounter = todos.filter(el => !el.done).length;\r\n    const importantCounter = todos.filter(el => !el.done && el.important).length;\r\n\r\n    return (\r\n        <div className=\"app\">\r\n            <Header doneCounter={doneCounter}\r\n                    todoCounter={todoCounter}\r\n                    importantCounter={importantCounter}\r\n                    items={todos}/>\r\n            <div className=\"status-panel\">\r\n                <SearchPanel onSearch={onSearch}\r\n                                searchValue={search}/>\r\n                <StatusFilter status={status}\r\n                                onFilterChange={onFilterChange}/>\r\n            </div>\r\n            <ItemList visibleItems={visibleItems}\r\n                        allItems={todos}\r\n                        onClickDone={onDone}\r\n                        onClickImportant={onImportant}\r\n                        onClickDelete={deleteItem}\r\n                        status={status}/>\r\n            <div className=\"add-elements\">\r\n                <AddForm onItemAdded={addElement}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './components/App/App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}